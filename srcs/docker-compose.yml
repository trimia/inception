# Docker Compose version
# https://docs.docker.com/compose/compose-file/compose-file-v3/
version: '3'

# Start of services
services:
# Define nginx service:
  #nginx:
  # depends_on: wordpress
  # container_name: nginx
  # build: .requirements/nginx
  # env_file:
  #   - ../.env
  # expose:
  #   -
  # ports:
  #   - :
  # networks:
  #    - internal
  # volumes:
  #   -wordpress:/var/www/html
  #

# services:
  # Define the 'wordpress' service.
  wordpressinc:
    depends_on: 
      mariadbinc:
        condition: service_completed_successfully
    # Use the official WordPress Docker image.
    container_name: wordpressinc
    image: wordpressinc
    build: 
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        - DBWP_NAME=${DBWP_NAME}
        - DBWP_USER=${DBWP_USER}
        - DBWP_PWD=${DBWP_PWD}
        - DATABASE_HOST=${DATABASE_HOST}
        - DOMAIN_NAME=${DOMAIN_NAME}
        - WP_TITLE=${WP_TITLE}
        - WP_ADMIN_USR=${WP_ADMIN_USR}
        - WP_ADMIN_PWD=${WP_ADMIN_PWD}
        - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
        - WP_USR=${WP_USR}
        - WP_EMAIL=${WP_EMAIL}
        - WP_PWD=${WP_PWD}
    # env_file:
    #   - .env
    ports:
      - 9000:9000
    networks:
      # Connect to the 'internal' network for communication.
      - internal  
    volumes:
      # Mount a local directory as a volume in the container.
      - wordpress:/var/www/html
  # Define the MariaDB service.
  mariadbinc:
    # Use the official MariaDB Docker image.
    container_name: mariadbinc
    image: mariadbinc
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        - DBWP_NAME=${DBWP_NAME}
        - DBWP_USER=${DBWP_USER}
        - DBWP_PWD=${DBWP_PWD}
        - DBWP_ROOT_PWD=${DBWP_ROOT_PWD}
    # env_file:
    #   - .env
    # restart: always
    networks: 
      # Connect to the 'internal' network for communication.
      - internal
    # Set environment variables for the MariaDB service.
    volumes:
      # Mount a local directory as a volume in the container.
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mariadb"]
      timeout: 10s
      retries: 5
      start_period: 30s
# Define the 'internal' network for inter-container communication.
networks:
  internal:
# Define named volumes for data storage.
volumes:
  wordpress:
    driver: local
    driver_opts:
      device: ~/Desktop/vol/data/wordpress
      o: bind
      type: none
  db:
    driver: local
    driver_opts:
      device: ~/Desktop/vol/data/mariadb
      o: bind
      type: none